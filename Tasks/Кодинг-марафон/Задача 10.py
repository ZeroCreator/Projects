from random import choice
from typing import Union


failures_list = ["В этом лабиринте одни тупики!", "Выход так близко, но недостижим!", "Выхода нет!"]


def can_exit(lst: list) -> Union[bool, str]:
    """ Функция возвращает истину, если можно пройти, двигаясь по нулям влево-вправо-вверх-вниз
    с левого верхнего угла матрицы до правого нижнего.
    :param lst: матричный двумерный список
    :return: True если возможно, иначе вывод сообщения из списка, выбранного случайным образом.
    """
    flag: int = 3 # Маркер для прохода матрицы
    if lst[0][0] == 0:
        lst[0][0] = flag
    for i in range(len(lst)):
        for j in range(len(lst[i])):
            if lst[i][j] == flag:
                # Обработка граничащих с маркером позиций
                for x in range(-1, 2):
                    for y in range(-1, 2):
                        # Проверка движение вверх-вниз-влево-вправо
                        if x != y and x + y != 0:
                            # Проверка невыхода за границы матрицы
                            if i + x >= 0 and j + y >= 0 and i + x < len(lst) and j + y < len(lst[i]):
                                # Меняем 0 на маркер
                                if lst[i + x][j + y] == 0:
                                    lst[i + x][j + y] = flag
    if lst[-1][-1] == flag:
        return True
    return choice(failures_list)


if __name__ == "__main__":
    assert can_exit([
        [0, 1, 1, 1, 1, 1, 1],
        [0, 0, 1, 1, 0, 1, 1],
        [1, 0, 0, 0, 0, 1, 1],
        [1, 1, 1, 1, 0, 0, 1],
        [1, 1, 1, 1, 1, 0, 0]
    ])

    assert can_exit([
        [0, 1, 1, 1, 1, 1, 1],
        [0, 0, 1, 0, 0, 1, 1],
        [1, 0, 0, 0, 0, 1, 1],
        [1, 1, 0, 1, 0, 0, 1],
        [1, 1, 0, 0, 1, 1, 1]
    ]) != True

    assert can_exit([
        [0, 1, 1, 1, 1, 0, 0],
        [0, 0, 0, 0, 1, 0, 0],
        [1, 1, 1, 0, 0, 0, 0],
        [1, 1, 1, 1, 1, 1, 0],
        [1, 1, 1, 1, 1, 1, 1]
    ]) != True

    assert can_exit([
        [0, 1, 1, 1, 1, 0, 0],
        [0, 0, 0, 0, 1, 0, 0],
        [1, 1, 1, 0, 0, 0, 0],
        [1, 0, 0, 0, 1, 1, 0],
        [1, 1, 1, 1, 1, 1, 0]
    ])

    assert can_exit([
        [0, 1, 1, 1, 1, 0, 0],
        [0, 0, 0, 0, 1, 0, 0],
        [1, 1, 1, 0, 1, 0, 0],
        [1, 0, 0, 1, 1, 1, 0],
        [1, 1, 1, 1, 1, 1, 0]
    ]) != True